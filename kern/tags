!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ENVGENSHIFT	env.c	22;"	d	file:
env_alloc	env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_create	env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f
env_destroy	env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_init	env.c	/^env_init(void)$/;"	f
env_init_percpu	env.c	/^env_init_percpu(void)$/;"	f
env_pop_tf	env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	env.c	/^env_run(struct Env *e)$/;"	f
env_setup_vm	env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
envid2env	env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envs	env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
gdt	env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt_pd	env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
load_icode	env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:
region_alloc	env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
